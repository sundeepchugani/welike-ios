//
//  CameraViewController.m
//  MakaMaka
//
//  Created by Ashish on 7/8/12.
//  Copyright (c) 2012 __MyCompanyName__. All rights reserved.
//

#import "CameraViewController.h"
#import "ApplyFilterViewController.h"
#import "UIImage+Resize.h"

BOOL pushApplyFilter;
BOOL checkForLibrary;
UIImage *imageFinal;
@implementation CameraViewController
@synthesize viewOverlay,libraryPicker;

- (id)init {
    self = [super init];
    if (self) {
        
        self.sourceType = UIImagePickerControllerSourceTypeCamera;
        //self.sourceType = UIImagePickerControllerSourceTypePhotoLibrary;
        //self.allowsEditing=YES;
        self.delegate = self;
    }
    return self;
}

- (void)didReceiveMemoryWarning
{
    // Releases the view if it doesn't have a superview.
    [super didReceiveMemoryWarning];
    
    // Release any cached data, images, etc that aren't in use.
}

#pragma mark - View lifecycle

-(void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
    if (checkForLibrary==YES) {
        checkForLibrary=NO;
        //[self performSelector:@selector(actionOnDismiss) withObject:nil afterDelay:1];
    }
}
-(void)actionOnDismiss{
    [self dismissModalViewControllerAnimated:NO];
    
}
- (void)viewDidLoad
{
    [super viewDidLoad];
    
    self.delegate = self;
    
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(log:) name:nil object:nil];
    [self addOverlay];
}

-(void)addOverlay{
    
    viewOverlay =[[UIView alloc] initWithFrame:CGRectMake(0, 425, 320, 55)];
    [viewOverlay setBackgroundColor:[UIColor clearColor]];
    
    UIImageView *imageViewForBtn = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, 320, 55)];
    [imageViewForBtn setBackgroundColor:[UIColor blackColor]];
    [imageViewForBtn setImage:[UIImage imageNamed:@"camera_footer.png"]];
    [viewOverlay addSubview:imageViewForBtn];
    
    UIButton *btn=[[UIButton alloc] initWithFrame:CGRectMake(250, 10, 60, 40)];
    [btn setBackgroundColor:[UIColor clearColor]];
    //[btn setBackgroundImage:[UIImage imageNamed:@"icon_close.png"] forState:UIControlStateNormal];
    [btn addTarget:self action:@selector(actionOnCancelCamera:) forControlEvents:UIControlEventTouchUpInside];
    [viewOverlay addSubview:btn];
    
    UIButton *btn1=[[UIButton alloc] initWithFrame:CGRectMake(10, 10, 60, 40)];
    [btn1 setBackgroundColor:[UIColor clearColor]];
    //[btn1 setBackgroundImage:[UIImage imageNamed:@"icon_gallery.png"] forState:UIControlStateNormal];
    [btn1 addTarget:self action:@selector(actionOnlibrary:) forControlEvents:UIControlEventTouchUpInside];
    [viewOverlay addSubview:btn1];
    
    UIButton *btn2=[[UIButton alloc] initWithFrame:CGRectMake(120, 7, 80, 45)];
    [btn2 setBackgroundColor:[UIColor clearColor]];
    //[btn2 setBackgroundImage:[UIImage imageNamed:@"icon_camera_shutter.png"] forState:UIControlStateNormal];
    [btn2 addTarget:self action:@selector(actionOncapture:) forControlEvents:UIControlEventTouchUpInside];
    //[btn2 setBackgroundColor:[UIColor clearColor]];//icon_camera_shutter.png
    [viewOverlay addSubview:btn2];
    [self.view addSubview:viewOverlay];


}

// 
-(void)actionOnCancelCamera:(id)sender{
    [self dismissModalViewControllerAnimated:YES];
}

-(void)actionOnlibrary:(id)sender{
    [[UIApplication sharedApplication] setStatusBarStyle:UIStatusBarStyleBlackOpaque];
    [[UIApplication sharedApplication] setStatusBarHidden:NO withAnimation:UIStatusBarAnimationSlide];
    if (!libraryPicker) {
        libraryPicker = [[UIImagePickerController alloc] init];
    }
    //libraryPicker.view.backgroundColor = [UIColor blackColor];
    //libraryPicker.topViewController.view.backgroundColor = [UIColor blackColor];
    libraryPicker.sourceType = UIImagePickerControllerSourceTypePhotoLibrary; 
    libraryPicker.delegate = self;
    //libraryPicker.allowsEditing=YES;
    [self presentModalViewController:libraryPicker animated:YES];
}
-(void)actionOncapture:(id)sender{
    self.delegate=self;
    //self.allowsEditing=YES;
    [self takePicture];
    isTakePictureButtonPressed=NO;
    //self.showsCameraControls=NO;
}

- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info{
    pushApplyFilter=YES;
    UIImage *image = [[info objectForKey:@"UIImagePickerControllerOriginalImage"] copy];
    
//    if ( picker.sourceType == UIImagePickerControllerSourceTypePhotoLibrary)
//        image = [[info objectForKey:UIImagePickerControllerEditedImage] copy];
//    
    imageFinal=[image copy];
//    if (picker.sourceType==UIImagePickerControllerSourceTypePhotoLibrary) {
//        checkForLibrary=YES;
//        
//        ApplyFilterViewController *filObj=[[ApplyFilterViewController alloc] init];
//        filObj.imageOrg=[image thumbnailImage:640 transparentBorder:0 cornerRadius:0 interpolationQuality:kCGInterpolationHigh];
//        [self.navigationController pushViewController:filObj animated:YES];
//        
//    }
    [picker dismissModalViewControllerAnimated:YES];
    
    [self performSelector:@selector(dismissCamera) withObject:nil afterDelay:0.5];
    
}

- (void)log:(NSNotification *)note {//_UIImagePickerControllerUserDidCaptureItem
    
    // NSLog(@"note=%@",note);
//    if ([note.name isEqualToString:@"_UIScrollViewDidEndDraggingNotification"]) {
//        
//        float height=[[[note.object subviews] objectAtIndex:0] size].height;
//        float width=[[[note.object subviews] objectAtIndex:0] size].width;
//        float scrHeight=[UIScreen mainScreen].bounds.size.height;
//        if (scrHeight==568) {
//            [note.object setContentSize:CGSizeMake(width, height+185)];
//        }else{
//            [note.object setContentSize:CGSizeMake(width, height+105)];
//        }
//        
//    }
    
    if ([note.name isEqualToString:@"Recorder_PhotoStillImageSampleBufferReady"]&& !isTakePictureButtonPressed) {
                 
        if (!isTakePictureButtonPressed) {
           
            if (viewOverlay!=nil) {
                [viewOverlay removeFromSuperview];
            }
            
            
            UIView *topView = [self findCamControlsLayerView:self.view];
            
            UIView *buttonsBar = [topView.subviews objectAtIndex:0];
            isTakePictureButtonPressed=YES;
            
            UIButton *btn=[buttonsBar.subviews objectAtIndex:0];
            [btn addTarget:self action:@selector(retakeBtnAction:) forControlEvents:UIControlEventTouchUpInside];
            
        }
    }
    
    
}
-(void)retakeBtnAction:(id)sender{
   
    
    UIViewController *top = [self topViewController];
    UIView *view = top.view;
    for (UIView *v1 in view.subviews) {
        for (UIView *v2 in v1.subviews) {
            NSLog(@"height=%f",v2.frame.size.height);
            
            
            if (v2.frame.size.height == 53 || v2.frame.size.height == 96) {
                //[v2 addSubview:viewOverlay];
                [self addOverlay];
                break;
            }
        }
    }
}

- (UIView*)findCamControlsLayerView:(UIView*)view {
    
    Class cl = [view class];
    NSString *desc = [cl description];
    if ([desc compare:@"PLCropOverlayBottomBar"] == NSOrderedSame)
        return view;
    
    for (NSUInteger i = 0; i < [view.subviews count]; i++)
    {
        UIView *subView = [view.subviews objectAtIndex:i];
        subView = [self findCamControlsLayerView:subView];
        if (subView)
            return subView;
    }
    
    return nil;
}


-(void)dismissCamera{
    [self dismissModalViewControllerAnimated:YES];
}

- (void)imagePickerControllerDidCancel:(UIImagePickerController *)picker{
    
    [picker dismissModalViewControllerAnimated:YES];
}
- (void)viewDidUnload
{
    [super viewDidUnload];
    // Release any retained subviews of the main view.
    // e.g. self.myOutlet = nil;
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    // Return YES for supported orientations
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}

@end
